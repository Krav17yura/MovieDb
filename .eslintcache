[{"D:\\project\\React\\movie-app\\src\\index.js":"1","D:\\project\\React\\movie-app\\src\\App.js":"2","D:\\project\\React\\movie-app\\src\\components\\Header\\index.jsx":"3","D:\\project\\React\\movie-app\\src\\components\\Filters\\index.jsx":"4","D:\\project\\React\\movie-app\\src\\constants.js":"5","D:\\project\\React\\movie-app\\src\\redux\\store.js":"6","D:\\project\\React\\movie-app\\src\\redux\\ducks\\rootReducer.js":"7","D:\\project\\React\\movie-app\\src\\redux\\ducks\\movies\\reducer.js":"8","D:\\project\\React\\movie-app\\src\\redux\\ducks\\movies\\actionCreators.js":"9","D:\\project\\React\\movie-app\\src\\redux\\ducks\\filters\\reducer.js":"10","D:\\project\\React\\movie-app\\src\\redux\\ducks\\filters\\actionCreators.js":"11","D:\\project\\React\\movie-app\\src\\components\\Movies\\index.jsx":"12","D:\\project\\React\\movie-app\\src\\components\\loading\\loading.js":"13","D:\\project\\React\\movie-app\\src\\components\\app-error\\index.js":"14","D:\\project\\React\\movie-app\\src\\components\\app-error\\app-error.js":"15"},{"size":279,"mtime":1609947840144,"results":"16","hashOfConfig":"17"},{"size":756,"mtime":1610536056886,"results":"18","hashOfConfig":"17"},{"size":2026,"mtime":1610536088871,"results":"19","hashOfConfig":"17"},{"size":10026,"mtime":1610348132537,"results":"20","hashOfConfig":"17"},{"size":118,"mtime":1610098802855,"results":"21","hashOfConfig":"17"},{"size":333,"mtime":1609945331425,"results":"22","hashOfConfig":"17"},{"size":231,"mtime":1610047425917,"results":"23","hashOfConfig":"17"},{"size":1075,"mtime":1610206644254,"results":"24","hashOfConfig":"17"},{"size":1292,"mtime":1610209170025,"results":"25","hashOfConfig":"17"},{"size":444,"mtime":1610119319911,"results":"26","hashOfConfig":"17"},{"size":128,"mtime":1610104800055,"results":"27","hashOfConfig":"17"},{"size":4856,"mtime":1610209017997,"results":"28","hashOfConfig":"17"},{"size":238,"mtime":1603374258615,"results":"29","hashOfConfig":"17"},{"size":61,"mtime":1603310105086,"results":"30","hashOfConfig":"17"},{"size":239,"mtime":1603310264619,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"lx9nwb",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\project\\React\\movie-app\\src\\index.js",[],["65","66"],"D:\\project\\React\\movie-app\\src\\App.js",[],"D:\\project\\React\\movie-app\\src\\components\\Header\\index.jsx",["67","68","69"],"import React from \"react\";\r\nimport useScrollTrigger from \"@material-ui/core/useScrollTrigger\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport {Container} from \"@material-ui/core\";\r\n\r\nconst useStyle = makeStyles({\r\n    appHeader: {\r\n        \"& .MuiToolbar-root\": {\r\n            backgroundColor: \"rgb(3,37,65)\",\r\n            \"& .MuiContainer-root\": {\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n                \"& .MuiTypography-root\": {\r\n                    fontWeight: 800,\r\n                    color: 'rgb(113,214,111)'\r\n                },\r\n                \"& .MuiBox-root\": {\r\n                    marginLeft: 'auto',\r\n                    '& .MuiIconButton-root': {\r\n                        '& .MuiSvgIcon-root': {\r\n                            fontSize: 28\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n})\r\n\r\nexport const Header = () => {\r\n    const classes = useStyle();\r\n    const trigger = useScrollTrigger({threshold: 30});\r\n    return (\r\n        <Slide appear={false} direction=\"down\" in={!trigger}>\r\n            <AppBar className={classes.appHeader}>\r\n                <Toolbar>\r\n                    <Container maxWidth={\"lg\"}>\r\n                        <Typography variant=\"h5\">Movie-DB</Typography>\r\n                        {/*<Box>*/}\r\n                        {/*    <IconButton color={\"primary\"}>*/}\r\n                        {/*        <SearchIcon/>*/}\r\n                        {/*    </IconButton>*/}\r\n                        {/*</Box>*/}\r\n                    </Container>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </Slide>\r\n    );\r\n}","D:\\project\\React\\movie-app\\src\\components\\Filters\\index.jsx",["70"],"import React, {useEffect, useState} from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Accordion from \"@material-ui/core/Accordion\";\r\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\r\nimport ArrowForwardIosIcon from \"@material-ui/icons/ArrowForwardIos\";\r\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport {Controller, useForm} from \"react-hook-form\";\r\nimport Select from \"react-select\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Slider from \"@material-ui/core/Slider\";\r\nimport {Button} from \"@material-ui/core\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport {API_KEY_3, API_URL} from \"../../constants\";\r\nimport axios from \"axios\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {setFilters} from \"../../redux/ducks/filters/actionCreators\";\r\n\r\n\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n    filterSideGrid: {\r\n        \"& .MuiTypography-root\": {\r\n            fontWeight: 500\r\n        },\r\n        \"& form\": {\r\n            padding: theme.spacing(1),\r\n            paddingLeft: 0,\r\n\r\n            \"& .MuiAccordion-root\": {\r\n                borderRadius: 10,\r\n                marginBottom: 20,\r\n                \"&:before\": {\r\n                    display: 'none'\r\n                },\r\n                \"& .MuiAccordionSummary-root\": {},\r\n                \"& .MuiAccordionDetails-root\": {\r\n                    flexDirection: 'column',\r\n                    \"& .MuiBox-root\": {\r\n                        padding: \"10px 0px\",\r\n                        borderBottom: '1px solid rgb(238,238,238)',\r\n                        '& .MuiInputLabel-root': {\r\n                            fontSize: 18,\r\n                            fontWeight: 500,\r\n                            color: 'rgb(154,154,154)'\r\n                        }\r\n                    }\r\n                },\r\n                \"& .MuiAccordionSummary-expandIcon.Mui-expanded\": {\r\n                    transform: \"rotate(90deg)\"\r\n                }\r\n            },\r\n\r\n            \"& .MuiAccordion-root.Mui-expanded\": {\r\n                marginTop: 0,\r\n                \"& .MuiAccordionSummary-root\": {\r\n                    borderBottom: '1px solid rgb(238,238,238)'\r\n                },\r\n\r\n            },\r\n            \"& .MuiButton-root\": {\r\n                backgroundColor: \"rgb(1,180,228)\",\r\n                color: 'white',\r\n                borderRadius: 15,\r\n                \"&:hover\": {\r\n                    backgroundColor: \"rgb(35,63,69)\",\r\n                }\r\n            }\r\n        }\r\n    }\r\n}))\r\n\r\nexport const Filters = () => {\r\n    const dispatch = useDispatch();\r\n    const classes = useStyle();\r\n    \r\n    const {control, handleSubmit } = useForm();\r\n\r\n    const [genresList, setGenresList] = useState([]);\r\n    const [genresValues, setGenresValues] = useState('');\r\n    const [expanded, setExpanded] = React.useState('');\r\n    const [sliderValue, setSliderValue] = React.useState([1, 10]);\r\n\r\n    const SliderHandleChangeValue = (event, newValue) => {\r\n        setSliderValue(newValue);\r\n    };\r\n\r\n    const AccordionHandleChange = (panel) => (event, newExpanded) => {\r\n        setExpanded(newExpanded ? panel : false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        const link = `${API_URL}/genre/movie/list?api_key=${API_KEY_3}&language=ru-RU`;\r\n        axios.get(link)\r\n            .then((resp) => {\r\n            setGenresList(resp.data.genres)\r\n        });\r\n    },[setGenresList])\r\n\r\n\r\n\r\n    function GenresHandleChangeValue(checkedName) {\r\n        const newNames = genresValues?.includes(checkedName)\r\n            ? genresValues?.filter(name => name !== checkedName)\r\n            : [...(genresValues ?? []), checkedName];\r\n        setGenresValues(newNames);\r\n        return newNames;\r\n    }\r\n\r\n    function valuetext(value) {\r\n        return `${value}°C`;\r\n    }\r\n\r\n    const onSubmit = data => {\r\n        const{primary_release_year, sort_by} = data\r\n        const filters = {\r\n            sort_by:  sort_by.value,\r\n            primary_release_year: primary_release_year.value,\r\n            with_genres: genresValues,\r\n            vote_average: sliderValue\r\n        }\r\n        dispatch(setFilters(filters))\r\n    };\r\n\r\n    return (\r\n        <Grid item sm={3} md={3} xs={12} className={classes.filterSideGrid} >\r\n            <Typography variant={'h5'}>\r\n                Популярные фильмы\r\n            </Typography>\r\n            <form onSubmit={handleSubmit(onSubmit)} >\r\n                <Accordion square expanded={expanded === 'panel1'} onChange={AccordionHandleChange('panel1')}>\r\n                    <AccordionSummary\r\n                        expandIcon={<ArrowForwardIosIcon/>}\r\n                        aria-controls=\"panel1a-content\"\r\n                        id=\"panel1a-header\"\r\n                    >\r\n                        <Typography>Сортировать</Typography>\r\n                    </AccordionSummary>\r\n                    <AccordionDetails>\r\n\r\n                        <InputLabel shrink htmlFor=\"age-native-label-placeholder\">\r\n                            Сортировать результаты по\r\n                        </InputLabel>\r\n                        <Controller\r\n                            name=\"sort_by\"\r\n                            as={Select}\r\n                            control={control}\r\n                            options={[\r\n                                {label: 'Популярности(убывание)', value: 'popularity.desc'},\r\n                                {label: 'Популярности(возрастрание)', value: 'popularity.asc'},\r\n                                {label: 'Рейтингу(убывание)', value: 'vote_average.desc'},\r\n                                {label: 'Рейтингу(возрастание)', value: 'vote_average.asc'},\r\n                                {label: 'Дате выпуска(убывание)', value: 'date.desc'},\r\n                                {label: 'Дата выпуска(возрастание)', value: 'date.asc'},\r\n                            ]}\r\n                            defaultValue={{label: 'Популярности(убывание)', value: 'popularity.desc'}}\r\n                        >\r\n\r\n                        </Controller>\r\n                    </AccordionDetails>\r\n                </Accordion>\r\n                <Accordion square expanded={expanded === 'panel2'} onChange={AccordionHandleChange('panel2')}>\r\n                    <AccordionSummary\r\n                        expandIcon={<ArrowForwardIosIcon/>}\r\n                        aria-controls=\"panel2a-content\"\r\n                        id=\"panel2a-header\"\r\n                    >\r\n                        <Typography>Фильтры</Typography>\r\n                    </AccordionSummary>\r\n                    <AccordionDetails>\r\n                        <Box>\r\n                            <InputLabel shrink htmlFor=\"primary_release_year-placeholder\">\r\n                                Дата выпуска\r\n                            </InputLabel>\r\n                            <Controller\r\n                                name=\"primary_release_year\"\r\n                                as={<Select onChange={() => console.log(\"hello\")}/>}\r\n                                control={control}\r\n                                options={[\r\n                                    {label: '2021', value: '2021'},\r\n                                    {label: '2020', value: '2020'},\r\n                                    {label: '2019', value: '2019'},\r\n                                    {label: '2018', value: '2018'},\r\n                                    {label: '2017', value: '2017'},\r\n                                    {label: '2016', value: '2016'},\r\n                                    {label: '2015', value: '2015'},\r\n                                    {label: '2014', value: '2014'},\r\n                                ]}\r\n                                defaultValue={{label: '2020', value: '2020'}}\r\n                            >\r\n                            </Controller>\r\n                        </Box>\r\n\r\n                        <Box>\r\n                            <InputLabel shrink htmlFor=\"genres\">\r\n                                Жарны:\r\n                            </InputLabel>\r\n                            {genresList &&  genresList.map((item) => (\r\n                                <span key={item.id}>\r\n                                    <input type=\"checkbox\" id={item.id}\r\n                                           checked={genresValues.includes(item.id)}\r\n                                           onChange={() => GenresHandleChangeValue(item.id)}/><label\r\n                                    htmlFor={item.id}>{item.name}</label>\r\n                                </span>\r\n                            ))}\r\n                        </Box>\r\n\r\n                        <Box>\r\n                            <InputLabel shrink htmlFor=\"vote_average\">\r\n                                Пользовательский Рейтинг\r\n                            </InputLabel>\r\n                            <Slider\r\n                                value={sliderValue}\r\n                                onChange={SliderHandleChangeValue}\r\n                                getAriaValueText={valuetext}\r\n                                aria-labelledby=\"range-slider\"\r\n                                valueLabelDisplay=\"auto\"\r\n                                step={1}\r\n                                marks\r\n                                min={1}\r\n                                max={10}\r\n                            />\r\n                        </Box>\r\n                    </AccordionDetails>\r\n                </Accordion>\r\n                <Button\r\n                    fullWidth\r\n                    type={\"submit\"}\r\n                >\r\n                    Поиск\r\n                </Button>\r\n            </form>\r\n        </Grid>\r\n    )\r\n}","D:\\project\\React\\movie-app\\src\\constants.js",[],"D:\\project\\React\\movie-app\\src\\redux\\store.js",[],"D:\\project\\React\\movie-app\\src\\redux\\ducks\\rootReducer.js",[],"D:\\project\\React\\movie-app\\src\\redux\\ducks\\movies\\reducer.js",[],"D:\\project\\React\\movie-app\\src\\redux\\ducks\\movies\\actionCreators.js",[],"D:\\project\\React\\movie-app\\src\\redux\\ducks\\filters\\reducer.js",[],"D:\\project\\React\\movie-app\\src\\redux\\ducks\\filters\\actionCreators.js",[],"D:\\project\\React\\movie-app\\src\\components\\Movies\\index.jsx",[],"D:\\project\\React\\movie-app\\src\\components\\loading\\loading.js",[],"D:\\project\\React\\movie-app\\src\\components\\app-error\\index.js",[],"D:\\project\\React\\movie-app\\src\\components\\app-error\\app-error.js",[],{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":8,"column":8,"nodeType":"77","messageId":"78","endLine":8,"endColumn":11},{"ruleId":"75","severity":1,"message":"79","line":9,"column":8,"nodeType":"77","messageId":"78","endLine":9,"endColumn":18},{"ruleId":"75","severity":1,"message":"80","line":11,"column":8,"nodeType":"77","messageId":"78","endLine":11,"endColumn":18},{"ruleId":"75","severity":1,"message":"81","line":17,"column":22,"nodeType":"77","messageId":"78","endLine":17,"endColumn":33},"no-native-reassign",["82"],"no-negated-in-lhs",["83"],"no-unused-vars","'Box' is defined but never used.","Identifier","unusedVar","'IconButton' is defined but never used.","'SearchIcon' is defined but never used.","'useSelector' is defined but never used.","no-global-assign","no-unsafe-negation"]